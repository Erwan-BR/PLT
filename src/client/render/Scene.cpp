// Generated by AMillasseau


#include "Scene.h"

namespace render {

	/// @brief Full constructor of the Scene class.
    Scene::Scene(state::Game* game,sf::Transform transform){
       	//Creation and initialisation of the background texture
    	this->background_texture =sf::Texture();
    	(this->background_texture).loadFromFile("./resources/img/background.png");

    	//Creation and initialisation of the background sprite
    	this->background=sf::Sprite();
    	(this->background).setTexture(this->background_texture);

    	//Set Starting Window
    	this->current_window = MAIN_WINDOW;

		for (state::Player* player: game->getPlayers()){
    		this->player_renderer.push_back(new PlayerRenderer(player,transform,MAIN_WINDOW));
		}
		for (state::Player* player: game->getPlayers()){
    		this->player_renderer.push_back(new PlayerRenderer(player,transform,DRAFTING_WINDOW));
		}
		this->player_renderer.push_back(new PlayerRenderer(game->getPlayers()[0],transform,PLAYER_INFO));

		this->game_renderer = new GameRenderer(game,transform);
	}

    /// @brief Full destructor of the Scene class.
    Scene::~Scene (){

    }

    /// @brief Getter of the background sprite.
    /// @return The sprite corresponding of the background of the scene
    sf::Sprite Scene::getBackground (){
    	return (this->background);
    }

    /// @brief Getter of the player renderer.
    /// @param index corresponding of the wanted player renderer in the vector player_renderer
	/// @return The player renderer corresponding of the index.
	PlayerRenderer* Scene::getPlayerRenderer (){
		return (this->player_renderer);
	}

	/// @brief Setter for current_window
	/// @param window new window
	void Scene::changeWindow(Window window){
		this->current_window = window;
	}

	/// @brief Getter for current_window
	/// @return value of current_window
	Window Scene::getWindow(){
		return (this->current_window);
	}
};
